<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>metropolis-hastings on BlitzBlog</title>
    <link>https://davidblitz.github.io/tags/metropolis-hastings/</link>
    <description>Recent content in metropolis-hastings on BlitzBlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>davidblitz</copyright>
    <lastBuildDate>Tue, 31 May 2022 00:00:29 +0100</lastBuildDate><atom:link href="https://davidblitz.github.io/tags/metropolis-hastings/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Uniformly Drawing from A Set Of Connected Graphs Without Knowing The Whole Set</title>
      <link>https://davidblitz.github.io/2022/05/31/2022-05-31-graph-mcmc/</link>
      <pubDate>Tue, 31 May 2022 00:00:29 +0100</pubDate>
      
      <guid>https://davidblitz.github.io/2022/05/31/2022-05-31-graph-mcmc/</guid>
      <description>The Problem Imagine wanting to empirically compute a statistic on connected graphs. The set of non-isomorphic connected graphs on a given number of nodes becomes huge very quickly. This is visualized in the following plot with logarithmic y-axis:
This is why computing your statistic for every possible graph becomes quickly infeasible and you might want to resort to random sampling instead. Unfortunately, at least my favorite python package for graphs, networkx, does not provide any method to uniformly sample from the set of connected graphs with $n$ nodes.</description>
    </item>
    
  </channel>
</rss>
